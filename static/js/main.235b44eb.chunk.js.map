{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAUaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,WAAW,SAACC,GACpC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAPxC,kCAWE,WAAwB,IAAD,OACrBJ,SAASK,oBAAoB,WAAW,SAACH,GACvC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAbxC,oBAiBE,WACE,IAAQL,EAAeO,KAAKR,MAApBC,WAIR,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAU,mCACqBA,EADrB,KAEP,kCA3Bd,GAAyBS,IAAMC,W,MCL/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.235b44eb.chunk.js","sourcesContent":["import React from 'react';\n// import classNames from 'classnames';\n\ntype Props = {\n};\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    // pressedKey = 'AAA';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n\n// export const App2: React.FC = () => (\n//   <div className=\"App\">\n//     <p className=\"App__message\">The last pressed key is [Enter]</p>\n//   </div>\n// );\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}